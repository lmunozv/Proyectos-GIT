//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Bizagi.Proxy.Layer.HUB.WorkflowEngineSOA {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WorkflowEngineSOASoap", Namespace="http://tempuri.org/")]
    public partial class WorkflowEngineSOA : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback pingOperationCompleted;
        
        private System.Threading.SendOrPostCallback createCasesAsStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback performActivityAsStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback setEventAsStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCasesAsStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveActivityAsStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback getActivitiesAsStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback suspendCasesAsStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback resumeCasesAsStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback getClosedActivitiesAsStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEventsAsStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWorkflowClassesAsStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCategoriesAsStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback abortCasesAsStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAssignationLogAsStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback assignActivityAsStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback grantCaseAccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback revokeCaseAccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback cleanTestDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback createCasesOperationCompleted;
        
        private System.Threading.SendOrPostCallback evalRuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAssignationLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback getClosedActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback performActivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback resumeCasesOperationCompleted;
        
        private System.Threading.SendOrPostCallback rollbackCaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback setEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback suspendCasesOperationCompleted;
        
        private System.Threading.SendOrPostCallback abortCasesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getApplicationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCategories2OperationCompleted;
        
        private System.Threading.SendOrPostCallback getCategoriesFromApplicationNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWorkflowClassesFromCategoryNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCategoriesLocalizedOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWorkflowClassesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWorkflowClasses2OperationCompleted;
        
        private System.Threading.SendOrPostCallback getEventsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCasesOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveActivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback assignActivityOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WorkflowEngineSOA() {
            this.Url = global::Bizagi.Proxy.Layer.HUB.Properties.Settings.Default.Bizagi_Proxy_Layer_HUB_WorkflowEngineSOA_WorkflowEngineSOA;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event pingCompletedEventHandler pingCompleted;
        
        /// <remarks/>
        public event createCasesAsStringCompletedEventHandler createCasesAsStringCompleted;
        
        /// <remarks/>
        public event performActivityAsStringCompletedEventHandler performActivityAsStringCompleted;
        
        /// <remarks/>
        public event setEventAsStringCompletedEventHandler setEventAsStringCompleted;
        
        /// <remarks/>
        public event getCasesAsStringCompletedEventHandler getCasesAsStringCompleted;
        
        /// <remarks/>
        public event saveActivityAsStringCompletedEventHandler saveActivityAsStringCompleted;
        
        /// <remarks/>
        public event getActivitiesAsStringCompletedEventHandler getActivitiesAsStringCompleted;
        
        /// <remarks/>
        public event suspendCasesAsStringCompletedEventHandler suspendCasesAsStringCompleted;
        
        /// <remarks/>
        public event resumeCasesAsStringCompletedEventHandler resumeCasesAsStringCompleted;
        
        /// <remarks/>
        public event getClosedActivitiesAsStringCompletedEventHandler getClosedActivitiesAsStringCompleted;
        
        /// <remarks/>
        public event getEventsAsStringCompletedEventHandler getEventsAsStringCompleted;
        
        /// <remarks/>
        public event getWorkflowClassesAsStringCompletedEventHandler getWorkflowClassesAsStringCompleted;
        
        /// <remarks/>
        public event getCategoriesAsStringCompletedEventHandler getCategoriesAsStringCompleted;
        
        /// <remarks/>
        public event abortCasesAsStringCompletedEventHandler abortCasesAsStringCompleted;
        
        /// <remarks/>
        public event getAssignationLogAsStringCompletedEventHandler getAssignationLogAsStringCompleted;
        
        /// <remarks/>
        public event CheckPasswordCompletedEventHandler CheckPasswordCompleted;
        
        /// <remarks/>
        public event assignActivityAsStringCompletedEventHandler assignActivityAsStringCompleted;
        
        /// <remarks/>
        public event grantCaseAccessCompletedEventHandler grantCaseAccessCompleted;
        
        /// <remarks/>
        public event revokeCaseAccessCompletedEventHandler revokeCaseAccessCompleted;
        
        /// <remarks/>
        public event cleanTestDataCompletedEventHandler cleanTestDataCompleted;
        
        /// <remarks/>
        public event createCasesCompletedEventHandler createCasesCompleted;
        
        /// <remarks/>
        public event evalRuleCompletedEventHandler evalRuleCompleted;
        
        /// <remarks/>
        public event getActivitiesCompletedEventHandler getActivitiesCompleted;
        
        /// <remarks/>
        public event getAssignationLogCompletedEventHandler getAssignationLogCompleted;
        
        /// <remarks/>
        public event getClosedActivitiesCompletedEventHandler getClosedActivitiesCompleted;
        
        /// <remarks/>
        public event performActivityCompletedEventHandler performActivityCompleted;
        
        /// <remarks/>
        public event resumeCasesCompletedEventHandler resumeCasesCompleted;
        
        /// <remarks/>
        public event rollbackCaseCompletedEventHandler rollbackCaseCompleted;
        
        /// <remarks/>
        public event setEventCompletedEventHandler setEventCompleted;
        
        /// <remarks/>
        public event suspendCasesCompletedEventHandler suspendCasesCompleted;
        
        /// <remarks/>
        public event abortCasesCompletedEventHandler abortCasesCompleted;
        
        /// <remarks/>
        public event getApplicationsCompletedEventHandler getApplicationsCompleted;
        
        /// <remarks/>
        public event getCategoriesCompletedEventHandler getCategoriesCompleted;
        
        /// <remarks/>
        public event getCategories2CompletedEventHandler getCategories2Completed;
        
        /// <remarks/>
        public event getCategoriesFromApplicationNameCompletedEventHandler getCategoriesFromApplicationNameCompleted;
        
        /// <remarks/>
        public event getWorkflowClassesFromCategoryNameCompletedEventHandler getWorkflowClassesFromCategoryNameCompleted;
        
        /// <remarks/>
        public event getCategoriesLocalizedCompletedEventHandler getCategoriesLocalizedCompleted;
        
        /// <remarks/>
        public event getWorkflowClassesCompletedEventHandler getWorkflowClassesCompleted;
        
        /// <remarks/>
        public event getWorkflowClasses2CompletedEventHandler getWorkflowClasses2Completed;
        
        /// <remarks/>
        public event getEventsCompletedEventHandler getEventsCompleted;
        
        /// <remarks/>
        public event getCasesCompletedEventHandler getCasesCompleted;
        
        /// <remarks/>
        public event saveActivityCompletedEventHandler saveActivityCompleted;
        
        /// <remarks/>
        public event assignActivityCompletedEventHandler assignActivityCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ping", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ping(string sMessage) {
            object[] results = this.Invoke("ping", new object[] {
                        sMessage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void pingAsync(string sMessage) {
            this.pingAsync(sMessage, null);
        }
        
        /// <remarks/>
        public void pingAsync(string sMessage, object userState) {
            if ((this.pingOperationCompleted == null)) {
                this.pingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpingOperationCompleted);
            }
            this.InvokeAsync("ping", new object[] {
                        sMessage}, this.pingOperationCompleted, userState);
        }
        
        private void OnpingOperationCompleted(object arg) {
            if ((this.pingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.pingCompleted(this, new pingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createCasesAsString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string createCasesAsString(string casesInfo) {
            object[] results = this.Invoke("createCasesAsString", new object[] {
                        casesInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createCasesAsStringAsync(string casesInfo) {
            this.createCasesAsStringAsync(casesInfo, null);
        }
        
        /// <remarks/>
        public void createCasesAsStringAsync(string casesInfo, object userState) {
            if ((this.createCasesAsStringOperationCompleted == null)) {
                this.createCasesAsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateCasesAsStringOperationCompleted);
            }
            this.InvokeAsync("createCasesAsString", new object[] {
                        casesInfo}, this.createCasesAsStringOperationCompleted, userState);
        }
        
        private void OncreateCasesAsStringOperationCompleted(object arg) {
            if ((this.createCasesAsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createCasesAsStringCompleted(this, new createCasesAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/performActivityAsString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string performActivityAsString(string activityInfo) {
            object[] results = this.Invoke("performActivityAsString", new object[] {
                        activityInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void performActivityAsStringAsync(string activityInfo) {
            this.performActivityAsStringAsync(activityInfo, null);
        }
        
        /// <remarks/>
        public void performActivityAsStringAsync(string activityInfo, object userState) {
            if ((this.performActivityAsStringOperationCompleted == null)) {
                this.performActivityAsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnperformActivityAsStringOperationCompleted);
            }
            this.InvokeAsync("performActivityAsString", new object[] {
                        activityInfo}, this.performActivityAsStringOperationCompleted, userState);
        }
        
        private void OnperformActivityAsStringOperationCompleted(object arg) {
            if ((this.performActivityAsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.performActivityAsStringCompleted(this, new performActivityAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setEventAsString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string setEventAsString(string eventInfo) {
            object[] results = this.Invoke("setEventAsString", new object[] {
                        eventInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void setEventAsStringAsync(string eventInfo) {
            this.setEventAsStringAsync(eventInfo, null);
        }
        
        /// <remarks/>
        public void setEventAsStringAsync(string eventInfo, object userState) {
            if ((this.setEventAsStringOperationCompleted == null)) {
                this.setEventAsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetEventAsStringOperationCompleted);
            }
            this.InvokeAsync("setEventAsString", new object[] {
                        eventInfo}, this.setEventAsStringOperationCompleted, userState);
        }
        
        private void OnsetEventAsStringOperationCompleted(object arg) {
            if ((this.setEventAsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setEventAsStringCompleted(this, new setEventAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCasesAsString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getCasesAsString(string caseFilters) {
            object[] results = this.Invoke("getCasesAsString", new object[] {
                        caseFilters});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCasesAsStringAsync(string caseFilters) {
            this.getCasesAsStringAsync(caseFilters, null);
        }
        
        /// <remarks/>
        public void getCasesAsStringAsync(string caseFilters, object userState) {
            if ((this.getCasesAsStringOperationCompleted == null)) {
                this.getCasesAsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCasesAsStringOperationCompleted);
            }
            this.InvokeAsync("getCasesAsString", new object[] {
                        caseFilters}, this.getCasesAsStringOperationCompleted, userState);
        }
        
        private void OngetCasesAsStringOperationCompleted(object arg) {
            if ((this.getCasesAsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCasesAsStringCompleted(this, new getCasesAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveActivityAsString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string saveActivityAsString(string activityInfo) {
            object[] results = this.Invoke("saveActivityAsString", new object[] {
                        activityInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void saveActivityAsStringAsync(string activityInfo) {
            this.saveActivityAsStringAsync(activityInfo, null);
        }
        
        /// <remarks/>
        public void saveActivityAsStringAsync(string activityInfo, object userState) {
            if ((this.saveActivityAsStringOperationCompleted == null)) {
                this.saveActivityAsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveActivityAsStringOperationCompleted);
            }
            this.InvokeAsync("saveActivityAsString", new object[] {
                        activityInfo}, this.saveActivityAsStringOperationCompleted, userState);
        }
        
        private void OnsaveActivityAsStringOperationCompleted(object arg) {
            if ((this.saveActivityAsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveActivityAsStringCompleted(this, new saveActivityAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getActivitiesAsString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getActivitiesAsString(string activityFilters) {
            object[] results = this.Invoke("getActivitiesAsString", new object[] {
                        activityFilters});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getActivitiesAsStringAsync(string activityFilters) {
            this.getActivitiesAsStringAsync(activityFilters, null);
        }
        
        /// <remarks/>
        public void getActivitiesAsStringAsync(string activityFilters, object userState) {
            if ((this.getActivitiesAsStringOperationCompleted == null)) {
                this.getActivitiesAsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActivitiesAsStringOperationCompleted);
            }
            this.InvokeAsync("getActivitiesAsString", new object[] {
                        activityFilters}, this.getActivitiesAsStringOperationCompleted, userState);
        }
        
        private void OngetActivitiesAsStringOperationCompleted(object arg) {
            if ((this.getActivitiesAsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getActivitiesAsStringCompleted(this, new getActivitiesAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/suspendCasesAsString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string suspendCasesAsString(string cases) {
            object[] results = this.Invoke("suspendCasesAsString", new object[] {
                        cases});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void suspendCasesAsStringAsync(string cases) {
            this.suspendCasesAsStringAsync(cases, null);
        }
        
        /// <remarks/>
        public void suspendCasesAsStringAsync(string cases, object userState) {
            if ((this.suspendCasesAsStringOperationCompleted == null)) {
                this.suspendCasesAsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsuspendCasesAsStringOperationCompleted);
            }
            this.InvokeAsync("suspendCasesAsString", new object[] {
                        cases}, this.suspendCasesAsStringOperationCompleted, userState);
        }
        
        private void OnsuspendCasesAsStringOperationCompleted(object arg) {
            if ((this.suspendCasesAsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.suspendCasesAsStringCompleted(this, new suspendCasesAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/resumeCasesAsString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string resumeCasesAsString(string cases) {
            object[] results = this.Invoke("resumeCasesAsString", new object[] {
                        cases});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void resumeCasesAsStringAsync(string cases) {
            this.resumeCasesAsStringAsync(cases, null);
        }
        
        /// <remarks/>
        public void resumeCasesAsStringAsync(string cases, object userState) {
            if ((this.resumeCasesAsStringOperationCompleted == null)) {
                this.resumeCasesAsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnresumeCasesAsStringOperationCompleted);
            }
            this.InvokeAsync("resumeCasesAsString", new object[] {
                        cases}, this.resumeCasesAsStringOperationCompleted, userState);
        }
        
        private void OnresumeCasesAsStringOperationCompleted(object arg) {
            if ((this.resumeCasesAsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.resumeCasesAsStringCompleted(this, new resumeCasesAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getClosedActivitiesAsString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getClosedActivitiesAsString(string caseInfo) {
            object[] results = this.Invoke("getClosedActivitiesAsString", new object[] {
                        caseInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getClosedActivitiesAsStringAsync(string caseInfo) {
            this.getClosedActivitiesAsStringAsync(caseInfo, null);
        }
        
        /// <remarks/>
        public void getClosedActivitiesAsStringAsync(string caseInfo, object userState) {
            if ((this.getClosedActivitiesAsStringOperationCompleted == null)) {
                this.getClosedActivitiesAsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetClosedActivitiesAsStringOperationCompleted);
            }
            this.InvokeAsync("getClosedActivitiesAsString", new object[] {
                        caseInfo}, this.getClosedActivitiesAsStringOperationCompleted, userState);
        }
        
        private void OngetClosedActivitiesAsStringOperationCompleted(object arg) {
            if ((this.getClosedActivitiesAsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getClosedActivitiesAsStringCompleted(this, new getClosedActivitiesAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getEventsAsString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getEventsAsString(string actFilters) {
            object[] results = this.Invoke("getEventsAsString", new object[] {
                        actFilters});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getEventsAsStringAsync(string actFilters) {
            this.getEventsAsStringAsync(actFilters, null);
        }
        
        /// <remarks/>
        public void getEventsAsStringAsync(string actFilters, object userState) {
            if ((this.getEventsAsStringOperationCompleted == null)) {
                this.getEventsAsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEventsAsStringOperationCompleted);
            }
            this.InvokeAsync("getEventsAsString", new object[] {
                        actFilters}, this.getEventsAsStringOperationCompleted, userState);
        }
        
        private void OngetEventsAsStringOperationCompleted(object arg) {
            if ((this.getEventsAsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEventsAsStringCompleted(this, new getEventsAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getWorkflowClassesAsString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getWorkflowClassesAsString(string category) {
            object[] results = this.Invoke("getWorkflowClassesAsString", new object[] {
                        category});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getWorkflowClassesAsStringAsync(string category) {
            this.getWorkflowClassesAsStringAsync(category, null);
        }
        
        /// <remarks/>
        public void getWorkflowClassesAsStringAsync(string category, object userState) {
            if ((this.getWorkflowClassesAsStringOperationCompleted == null)) {
                this.getWorkflowClassesAsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWorkflowClassesAsStringOperationCompleted);
            }
            this.InvokeAsync("getWorkflowClassesAsString", new object[] {
                        category}, this.getWorkflowClassesAsStringOperationCompleted, userState);
        }
        
        private void OngetWorkflowClassesAsStringOperationCompleted(object arg) {
            if ((this.getWorkflowClassesAsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWorkflowClassesAsStringCompleted(this, new getWorkflowClassesAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCategoriesAsString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getCategoriesAsString(string appName) {
            object[] results = this.Invoke("getCategoriesAsString", new object[] {
                        appName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCategoriesAsStringAsync(string appName) {
            this.getCategoriesAsStringAsync(appName, null);
        }
        
        /// <remarks/>
        public void getCategoriesAsStringAsync(string appName, object userState) {
            if ((this.getCategoriesAsStringOperationCompleted == null)) {
                this.getCategoriesAsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCategoriesAsStringOperationCompleted);
            }
            this.InvokeAsync("getCategoriesAsString", new object[] {
                        appName}, this.getCategoriesAsStringOperationCompleted, userState);
        }
        
        private void OngetCategoriesAsStringOperationCompleted(object arg) {
            if ((this.getCategoriesAsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCategoriesAsStringCompleted(this, new getCategoriesAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/abortCasesAsString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string abortCasesAsString(string info) {
            object[] results = this.Invoke("abortCasesAsString", new object[] {
                        info});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void abortCasesAsStringAsync(string info) {
            this.abortCasesAsStringAsync(info, null);
        }
        
        /// <remarks/>
        public void abortCasesAsStringAsync(string info, object userState) {
            if ((this.abortCasesAsStringOperationCompleted == null)) {
                this.abortCasesAsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnabortCasesAsStringOperationCompleted);
            }
            this.InvokeAsync("abortCasesAsString", new object[] {
                        info}, this.abortCasesAsStringOperationCompleted, userState);
        }
        
        private void OnabortCasesAsStringOperationCompleted(object arg) {
            if ((this.abortCasesAsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.abortCasesAsStringCompleted(this, new abortCasesAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAssignationLogAsString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getAssignationLogAsString(string info) {
            object[] results = this.Invoke("getAssignationLogAsString", new object[] {
                        info});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAssignationLogAsStringAsync(string info) {
            this.getAssignationLogAsStringAsync(info, null);
        }
        
        /// <remarks/>
        public void getAssignationLogAsStringAsync(string info, object userState) {
            if ((this.getAssignationLogAsStringOperationCompleted == null)) {
                this.getAssignationLogAsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAssignationLogAsStringOperationCompleted);
            }
            this.InvokeAsync("getAssignationLogAsString", new object[] {
                        info}, this.getAssignationLogAsStringOperationCompleted, userState);
        }
        
        private void OngetAssignationLogAsStringOperationCompleted(object arg) {
            if ((this.getAssignationLogAsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAssignationLogAsStringCompleted(this, new getAssignationLogAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckPassword(string sDomain, string sUserName, string sPassword) {
            object[] results = this.Invoke("CheckPassword", new object[] {
                        sDomain,
                        sUserName,
                        sPassword});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckPasswordAsync(string sDomain, string sUserName, string sPassword) {
            this.CheckPasswordAsync(sDomain, sUserName, sPassword, null);
        }
        
        /// <remarks/>
        public void CheckPasswordAsync(string sDomain, string sUserName, string sPassword, object userState) {
            if ((this.CheckPasswordOperationCompleted == null)) {
                this.CheckPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckPasswordOperationCompleted);
            }
            this.InvokeAsync("CheckPassword", new object[] {
                        sDomain,
                        sUserName,
                        sPassword}, this.CheckPasswordOperationCompleted, userState);
        }
        
        private void OnCheckPasswordOperationCompleted(object arg) {
            if ((this.CheckPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckPasswordCompleted(this, new CheckPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/assignActivityAsString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string assignActivityAsString(string info) {
            object[] results = this.Invoke("assignActivityAsString", new object[] {
                        info});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void assignActivityAsStringAsync(string info) {
            this.assignActivityAsStringAsync(info, null);
        }
        
        /// <remarks/>
        public void assignActivityAsStringAsync(string info, object userState) {
            if ((this.assignActivityAsStringOperationCompleted == null)) {
                this.assignActivityAsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassignActivityAsStringOperationCompleted);
            }
            this.InvokeAsync("assignActivityAsString", new object[] {
                        info}, this.assignActivityAsStringOperationCompleted, userState);
        }
        
        private void OnassignActivityAsStringOperationCompleted(object arg) {
            if ((this.assignActivityAsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assignActivityAsStringCompleted(this, new assignActivityAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/grantCaseAccess", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string grantCaseAccess(string caseAccessXML) {
            object[] results = this.Invoke("grantCaseAccess", new object[] {
                        caseAccessXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void grantCaseAccessAsync(string caseAccessXML) {
            this.grantCaseAccessAsync(caseAccessXML, null);
        }
        
        /// <remarks/>
        public void grantCaseAccessAsync(string caseAccessXML, object userState) {
            if ((this.grantCaseAccessOperationCompleted == null)) {
                this.grantCaseAccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OngrantCaseAccessOperationCompleted);
            }
            this.InvokeAsync("grantCaseAccess", new object[] {
                        caseAccessXML}, this.grantCaseAccessOperationCompleted, userState);
        }
        
        private void OngrantCaseAccessOperationCompleted(object arg) {
            if ((this.grantCaseAccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.grantCaseAccessCompleted(this, new grantCaseAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/revokeCaseAccess", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string revokeCaseAccess(string caseAccessXML) {
            object[] results = this.Invoke("revokeCaseAccess", new object[] {
                        caseAccessXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void revokeCaseAccessAsync(string caseAccessXML) {
            this.revokeCaseAccessAsync(caseAccessXML, null);
        }
        
        /// <remarks/>
        public void revokeCaseAccessAsync(string caseAccessXML, object userState) {
            if ((this.revokeCaseAccessOperationCompleted == null)) {
                this.revokeCaseAccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrevokeCaseAccessOperationCompleted);
            }
            this.InvokeAsync("revokeCaseAccess", new object[] {
                        caseAccessXML}, this.revokeCaseAccessOperationCompleted, userState);
        }
        
        private void OnrevokeCaseAccessOperationCompleted(object arg) {
            if ((this.revokeCaseAccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.revokeCaseAccessCompleted(this, new revokeCaseAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/cleanTestData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode cleanTestData(System.Xml.XmlNode caseInfo) {
            object[] results = this.Invoke("cleanTestData", new object[] {
                        caseInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void cleanTestDataAsync(System.Xml.XmlNode caseInfo) {
            this.cleanTestDataAsync(caseInfo, null);
        }
        
        /// <remarks/>
        public void cleanTestDataAsync(System.Xml.XmlNode caseInfo, object userState) {
            if ((this.cleanTestDataOperationCompleted == null)) {
                this.cleanTestDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OncleanTestDataOperationCompleted);
            }
            this.InvokeAsync("cleanTestData", new object[] {
                        caseInfo}, this.cleanTestDataOperationCompleted, userState);
        }
        
        private void OncleanTestDataOperationCompleted(object arg) {
            if ((this.cleanTestDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cleanTestDataCompleted(this, new cleanTestDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createCases", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode createCases(System.Xml.XmlNode casesInfo) {
            object[] results = this.Invoke("createCases", new object[] {
                        casesInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void createCasesAsync(System.Xml.XmlNode casesInfo) {
            this.createCasesAsync(casesInfo, null);
        }
        
        /// <remarks/>
        public void createCasesAsync(System.Xml.XmlNode casesInfo, object userState) {
            if ((this.createCasesOperationCompleted == null)) {
                this.createCasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateCasesOperationCompleted);
            }
            this.InvokeAsync("createCases", new object[] {
                        casesInfo}, this.createCasesOperationCompleted, userState);
        }
        
        private void OncreateCasesOperationCompleted(object arg) {
            if ((this.createCasesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createCasesCompleted(this, new createCasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/evalRule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode evalRule(System.Xml.XmlNode assertionInfo) {
            object[] results = this.Invoke("evalRule", new object[] {
                        assertionInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void evalRuleAsync(System.Xml.XmlNode assertionInfo) {
            this.evalRuleAsync(assertionInfo, null);
        }
        
        /// <remarks/>
        public void evalRuleAsync(System.Xml.XmlNode assertionInfo, object userState) {
            if ((this.evalRuleOperationCompleted == null)) {
                this.evalRuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnevalRuleOperationCompleted);
            }
            this.InvokeAsync("evalRule", new object[] {
                        assertionInfo}, this.evalRuleOperationCompleted, userState);
        }
        
        private void OnevalRuleOperationCompleted(object arg) {
            if ((this.evalRuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.evalRuleCompleted(this, new evalRuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getActivities", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode getActivities(System.Xml.XmlNode activitiesFilters) {
            object[] results = this.Invoke("getActivities", new object[] {
                        activitiesFilters});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void getActivitiesAsync(System.Xml.XmlNode activitiesFilters) {
            this.getActivitiesAsync(activitiesFilters, null);
        }
        
        /// <remarks/>
        public void getActivitiesAsync(System.Xml.XmlNode activitiesFilters, object userState) {
            if ((this.getActivitiesOperationCompleted == null)) {
                this.getActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActivitiesOperationCompleted);
            }
            this.InvokeAsync("getActivities", new object[] {
                        activitiesFilters}, this.getActivitiesOperationCompleted, userState);
        }
        
        private void OngetActivitiesOperationCompleted(object arg) {
            if ((this.getActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getActivitiesCompleted(this, new getActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAssignationLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode getAssignationLog(System.Xml.XmlNode caseInfo) {
            object[] results = this.Invoke("getAssignationLog", new object[] {
                        caseInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void getAssignationLogAsync(System.Xml.XmlNode caseInfo) {
            this.getAssignationLogAsync(caseInfo, null);
        }
        
        /// <remarks/>
        public void getAssignationLogAsync(System.Xml.XmlNode caseInfo, object userState) {
            if ((this.getAssignationLogOperationCompleted == null)) {
                this.getAssignationLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAssignationLogOperationCompleted);
            }
            this.InvokeAsync("getAssignationLog", new object[] {
                        caseInfo}, this.getAssignationLogOperationCompleted, userState);
        }
        
        private void OngetAssignationLogOperationCompleted(object arg) {
            if ((this.getAssignationLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAssignationLogCompleted(this, new getAssignationLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getClosedActivities", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode getClosedActivities(System.Xml.XmlNode caseInfo) {
            object[] results = this.Invoke("getClosedActivities", new object[] {
                        caseInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void getClosedActivitiesAsync(System.Xml.XmlNode caseInfo) {
            this.getClosedActivitiesAsync(caseInfo, null);
        }
        
        /// <remarks/>
        public void getClosedActivitiesAsync(System.Xml.XmlNode caseInfo, object userState) {
            if ((this.getClosedActivitiesOperationCompleted == null)) {
                this.getClosedActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetClosedActivitiesOperationCompleted);
            }
            this.InvokeAsync("getClosedActivities", new object[] {
                        caseInfo}, this.getClosedActivitiesOperationCompleted, userState);
        }
        
        private void OngetClosedActivitiesOperationCompleted(object arg) {
            if ((this.getClosedActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getClosedActivitiesCompleted(this, new getClosedActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/performActivity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode performActivity(System.Xml.XmlNode activityInfo) {
            object[] results = this.Invoke("performActivity", new object[] {
                        activityInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void performActivityAsync(System.Xml.XmlNode activityInfo) {
            this.performActivityAsync(activityInfo, null);
        }
        
        /// <remarks/>
        public void performActivityAsync(System.Xml.XmlNode activityInfo, object userState) {
            if ((this.performActivityOperationCompleted == null)) {
                this.performActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnperformActivityOperationCompleted);
            }
            this.InvokeAsync("performActivity", new object[] {
                        activityInfo}, this.performActivityOperationCompleted, userState);
        }
        
        private void OnperformActivityOperationCompleted(object arg) {
            if ((this.performActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.performActivityCompleted(this, new performActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/resumeCases", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode resumeCases(System.Xml.XmlNode cases) {
            object[] results = this.Invoke("resumeCases", new object[] {
                        cases});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void resumeCasesAsync(System.Xml.XmlNode cases) {
            this.resumeCasesAsync(cases, null);
        }
        
        /// <remarks/>
        public void resumeCasesAsync(System.Xml.XmlNode cases, object userState) {
            if ((this.resumeCasesOperationCompleted == null)) {
                this.resumeCasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnresumeCasesOperationCompleted);
            }
            this.InvokeAsync("resumeCases", new object[] {
                        cases}, this.resumeCasesOperationCompleted, userState);
        }
        
        private void OnresumeCasesOperationCompleted(object arg) {
            if ((this.resumeCasesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.resumeCasesCompleted(this, new resumeCasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/rollbackCase", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode rollbackCase(System.Xml.XmlNode caseInfo) {
            object[] results = this.Invoke("rollbackCase", new object[] {
                        caseInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void rollbackCaseAsync(System.Xml.XmlNode caseInfo) {
            this.rollbackCaseAsync(caseInfo, null);
        }
        
        /// <remarks/>
        public void rollbackCaseAsync(System.Xml.XmlNode caseInfo, object userState) {
            if ((this.rollbackCaseOperationCompleted == null)) {
                this.rollbackCaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrollbackCaseOperationCompleted);
            }
            this.InvokeAsync("rollbackCase", new object[] {
                        caseInfo}, this.rollbackCaseOperationCompleted, userState);
        }
        
        private void OnrollbackCaseOperationCompleted(object arg) {
            if ((this.rollbackCaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rollbackCaseCompleted(this, new rollbackCaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setEvent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode setEvent(System.Xml.XmlNode eventInfo) {
            object[] results = this.Invoke("setEvent", new object[] {
                        eventInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void setEventAsync(System.Xml.XmlNode eventInfo) {
            this.setEventAsync(eventInfo, null);
        }
        
        /// <remarks/>
        public void setEventAsync(System.Xml.XmlNode eventInfo, object userState) {
            if ((this.setEventOperationCompleted == null)) {
                this.setEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetEventOperationCompleted);
            }
            this.InvokeAsync("setEvent", new object[] {
                        eventInfo}, this.setEventOperationCompleted, userState);
        }
        
        private void OnsetEventOperationCompleted(object arg) {
            if ((this.setEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setEventCompleted(this, new setEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/suspendCases", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode suspendCases(System.Xml.XmlNode cases) {
            object[] results = this.Invoke("suspendCases", new object[] {
                        cases});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void suspendCasesAsync(System.Xml.XmlNode cases) {
            this.suspendCasesAsync(cases, null);
        }
        
        /// <remarks/>
        public void suspendCasesAsync(System.Xml.XmlNode cases, object userState) {
            if ((this.suspendCasesOperationCompleted == null)) {
                this.suspendCasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsuspendCasesOperationCompleted);
            }
            this.InvokeAsync("suspendCases", new object[] {
                        cases}, this.suspendCasesOperationCompleted, userState);
        }
        
        private void OnsuspendCasesOperationCompleted(object arg) {
            if ((this.suspendCasesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.suspendCasesCompleted(this, new suspendCasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/abortCases", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode abortCases(System.Xml.XmlNode casesInfo) {
            object[] results = this.Invoke("abortCases", new object[] {
                        casesInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void abortCasesAsync(System.Xml.XmlNode casesInfo) {
            this.abortCasesAsync(casesInfo, null);
        }
        
        /// <remarks/>
        public void abortCasesAsync(System.Xml.XmlNode casesInfo, object userState) {
            if ((this.abortCasesOperationCompleted == null)) {
                this.abortCasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnabortCasesOperationCompleted);
            }
            this.InvokeAsync("abortCases", new object[] {
                        casesInfo}, this.abortCasesOperationCompleted, userState);
        }
        
        private void OnabortCasesOperationCompleted(object arg) {
            if ((this.abortCasesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.abortCasesCompleted(this, new abortCasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getApplications", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode getApplications() {
            object[] results = this.Invoke("getApplications", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void getApplicationsAsync() {
            this.getApplicationsAsync(null);
        }
        
        /// <remarks/>
        public void getApplicationsAsync(object userState) {
            if ((this.getApplicationsOperationCompleted == null)) {
                this.getApplicationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetApplicationsOperationCompleted);
            }
            this.InvokeAsync("getApplications", new object[0], this.getApplicationsOperationCompleted, userState);
        }
        
        private void OngetApplicationsOperationCompleted(object arg) {
            if ((this.getApplicationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getApplicationsCompleted(this, new getApplicationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCategories", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode getCategories(System.Xml.XmlNode application) {
            object[] results = this.Invoke("getCategories", new object[] {
                        application});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void getCategoriesAsync(System.Xml.XmlNode application) {
            this.getCategoriesAsync(application, null);
        }
        
        /// <remarks/>
        public void getCategoriesAsync(System.Xml.XmlNode application, object userState) {
            if ((this.getCategoriesOperationCompleted == null)) {
                this.getCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCategoriesOperationCompleted);
            }
            this.InvokeAsync("getCategories", new object[] {
                        application}, this.getCategoriesOperationCompleted, userState);
        }
        
        private void OngetCategoriesOperationCompleted(object arg) {
            if ((this.getCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCategoriesCompleted(this, new getCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCategories2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode getCategories2(string applicationName) {
            object[] results = this.Invoke("getCategories2", new object[] {
                        applicationName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void getCategories2Async(string applicationName) {
            this.getCategories2Async(applicationName, null);
        }
        
        /// <remarks/>
        public void getCategories2Async(string applicationName, object userState) {
            if ((this.getCategories2OperationCompleted == null)) {
                this.getCategories2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCategories2OperationCompleted);
            }
            this.InvokeAsync("getCategories2", new object[] {
                        applicationName}, this.getCategories2OperationCompleted, userState);
        }
        
        private void OngetCategories2OperationCompleted(object arg) {
            if ((this.getCategories2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCategories2Completed(this, new getCategories2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCategoriesFromApplicationName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode getCategoriesFromApplicationName(string applicationName) {
            object[] results = this.Invoke("getCategoriesFromApplicationName", new object[] {
                        applicationName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void getCategoriesFromApplicationNameAsync(string applicationName) {
            this.getCategoriesFromApplicationNameAsync(applicationName, null);
        }
        
        /// <remarks/>
        public void getCategoriesFromApplicationNameAsync(string applicationName, object userState) {
            if ((this.getCategoriesFromApplicationNameOperationCompleted == null)) {
                this.getCategoriesFromApplicationNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCategoriesFromApplicationNameOperationCompleted);
            }
            this.InvokeAsync("getCategoriesFromApplicationName", new object[] {
                        applicationName}, this.getCategoriesFromApplicationNameOperationCompleted, userState);
        }
        
        private void OngetCategoriesFromApplicationNameOperationCompleted(object arg) {
            if ((this.getCategoriesFromApplicationNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCategoriesFromApplicationNameCompleted(this, new getCategoriesFromApplicationNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getWorkflowClassesFromCategoryName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode getWorkflowClassesFromCategoryName(string categoryName) {
            object[] results = this.Invoke("getWorkflowClassesFromCategoryName", new object[] {
                        categoryName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void getWorkflowClassesFromCategoryNameAsync(string categoryName) {
            this.getWorkflowClassesFromCategoryNameAsync(categoryName, null);
        }
        
        /// <remarks/>
        public void getWorkflowClassesFromCategoryNameAsync(string categoryName, object userState) {
            if ((this.getWorkflowClassesFromCategoryNameOperationCompleted == null)) {
                this.getWorkflowClassesFromCategoryNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWorkflowClassesFromCategoryNameOperationCompleted);
            }
            this.InvokeAsync("getWorkflowClassesFromCategoryName", new object[] {
                        categoryName}, this.getWorkflowClassesFromCategoryNameOperationCompleted, userState);
        }
        
        private void OngetWorkflowClassesFromCategoryNameOperationCompleted(object arg) {
            if ((this.getWorkflowClassesFromCategoryNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWorkflowClassesFromCategoryNameCompleted(this, new getWorkflowClassesFromCategoryNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCategoriesLocalized", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode getCategoriesLocalized(string applicationName, string cultureName) {
            object[] results = this.Invoke("getCategoriesLocalized", new object[] {
                        applicationName,
                        cultureName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void getCategoriesLocalizedAsync(string applicationName, string cultureName) {
            this.getCategoriesLocalizedAsync(applicationName, cultureName, null);
        }
        
        /// <remarks/>
        public void getCategoriesLocalizedAsync(string applicationName, string cultureName, object userState) {
            if ((this.getCategoriesLocalizedOperationCompleted == null)) {
                this.getCategoriesLocalizedOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCategoriesLocalizedOperationCompleted);
            }
            this.InvokeAsync("getCategoriesLocalized", new object[] {
                        applicationName,
                        cultureName}, this.getCategoriesLocalizedOperationCompleted, userState);
        }
        
        private void OngetCategoriesLocalizedOperationCompleted(object arg) {
            if ((this.getCategoriesLocalizedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCategoriesLocalizedCompleted(this, new getCategoriesLocalizedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getWorkflowClasses", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode getWorkflowClasses(System.Xml.XmlNode category) {
            object[] results = this.Invoke("getWorkflowClasses", new object[] {
                        category});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void getWorkflowClassesAsync(System.Xml.XmlNode category) {
            this.getWorkflowClassesAsync(category, null);
        }
        
        /// <remarks/>
        public void getWorkflowClassesAsync(System.Xml.XmlNode category, object userState) {
            if ((this.getWorkflowClassesOperationCompleted == null)) {
                this.getWorkflowClassesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWorkflowClassesOperationCompleted);
            }
            this.InvokeAsync("getWorkflowClasses", new object[] {
                        category}, this.getWorkflowClassesOperationCompleted, userState);
        }
        
        private void OngetWorkflowClassesOperationCompleted(object arg) {
            if ((this.getWorkflowClassesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWorkflowClassesCompleted(this, new getWorkflowClassesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getWorkflowClasses2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode getWorkflowClasses2(string categoryName) {
            object[] results = this.Invoke("getWorkflowClasses2", new object[] {
                        categoryName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void getWorkflowClasses2Async(string categoryName) {
            this.getWorkflowClasses2Async(categoryName, null);
        }
        
        /// <remarks/>
        public void getWorkflowClasses2Async(string categoryName, object userState) {
            if ((this.getWorkflowClasses2OperationCompleted == null)) {
                this.getWorkflowClasses2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWorkflowClasses2OperationCompleted);
            }
            this.InvokeAsync("getWorkflowClasses2", new object[] {
                        categoryName}, this.getWorkflowClasses2OperationCompleted, userState);
        }
        
        private void OngetWorkflowClasses2OperationCompleted(object arg) {
            if ((this.getWorkflowClasses2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWorkflowClasses2Completed(this, new getWorkflowClasses2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getEvents", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode getEvents(System.Xml.XmlNode activitiesFilters) {
            object[] results = this.Invoke("getEvents", new object[] {
                        activitiesFilters});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void getEventsAsync(System.Xml.XmlNode activitiesFilters) {
            this.getEventsAsync(activitiesFilters, null);
        }
        
        /// <remarks/>
        public void getEventsAsync(System.Xml.XmlNode activitiesFilters, object userState) {
            if ((this.getEventsOperationCompleted == null)) {
                this.getEventsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEventsOperationCompleted);
            }
            this.InvokeAsync("getEvents", new object[] {
                        activitiesFilters}, this.getEventsOperationCompleted, userState);
        }
        
        private void OngetEventsOperationCompleted(object arg) {
            if ((this.getEventsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEventsCompleted(this, new getEventsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCases", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode getCases(System.Xml.XmlNode casesFilters) {
            object[] results = this.Invoke("getCases", new object[] {
                        casesFilters});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void getCasesAsync(System.Xml.XmlNode casesFilters) {
            this.getCasesAsync(casesFilters, null);
        }
        
        /// <remarks/>
        public void getCasesAsync(System.Xml.XmlNode casesFilters, object userState) {
            if ((this.getCasesOperationCompleted == null)) {
                this.getCasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCasesOperationCompleted);
            }
            this.InvokeAsync("getCases", new object[] {
                        casesFilters}, this.getCasesOperationCompleted, userState);
        }
        
        private void OngetCasesOperationCompleted(object arg) {
            if ((this.getCasesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCasesCompleted(this, new getCasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveActivity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode saveActivity(System.Xml.XmlNode activityInfo) {
            object[] results = this.Invoke("saveActivity", new object[] {
                        activityInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void saveActivityAsync(System.Xml.XmlNode activityInfo) {
            this.saveActivityAsync(activityInfo, null);
        }
        
        /// <remarks/>
        public void saveActivityAsync(System.Xml.XmlNode activityInfo, object userState) {
            if ((this.saveActivityOperationCompleted == null)) {
                this.saveActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveActivityOperationCompleted);
            }
            this.InvokeAsync("saveActivity", new object[] {
                        activityInfo}, this.saveActivityOperationCompleted, userState);
        }
        
        private void OnsaveActivityOperationCompleted(object arg) {
            if ((this.saveActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveActivityCompleted(this, new saveActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/assignActivity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode assignActivity(System.Xml.XmlNode xmlDoc) {
            object[] results = this.Invoke("assignActivity", new object[] {
                        xmlDoc});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void assignActivityAsync(System.Xml.XmlNode xmlDoc) {
            this.assignActivityAsync(xmlDoc, null);
        }
        
        /// <remarks/>
        public void assignActivityAsync(System.Xml.XmlNode xmlDoc, object userState) {
            if ((this.assignActivityOperationCompleted == null)) {
                this.assignActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnassignActivityOperationCompleted);
            }
            this.InvokeAsync("assignActivity", new object[] {
                        xmlDoc}, this.assignActivityOperationCompleted, userState);
        }
        
        private void OnassignActivityOperationCompleted(object arg) {
            if ((this.assignActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.assignActivityCompleted(this, new assignActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void pingCompletedEventHandler(object sender, pingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class pingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal pingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createCasesAsStringCompletedEventHandler(object sender, createCasesAsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createCasesAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createCasesAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void performActivityAsStringCompletedEventHandler(object sender, performActivityAsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class performActivityAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal performActivityAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setEventAsStringCompletedEventHandler(object sender, setEventAsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setEventAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setEventAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getCasesAsStringCompletedEventHandler(object sender, getCasesAsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCasesAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCasesAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void saveActivityAsStringCompletedEventHandler(object sender, saveActivityAsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveActivityAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveActivityAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getActivitiesAsStringCompletedEventHandler(object sender, getActivitiesAsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getActivitiesAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getActivitiesAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void suspendCasesAsStringCompletedEventHandler(object sender, suspendCasesAsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class suspendCasesAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal suspendCasesAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void resumeCasesAsStringCompletedEventHandler(object sender, resumeCasesAsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class resumeCasesAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal resumeCasesAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getClosedActivitiesAsStringCompletedEventHandler(object sender, getClosedActivitiesAsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getClosedActivitiesAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getClosedActivitiesAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getEventsAsStringCompletedEventHandler(object sender, getEventsAsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEventsAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEventsAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getWorkflowClassesAsStringCompletedEventHandler(object sender, getWorkflowClassesAsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWorkflowClassesAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWorkflowClassesAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getCategoriesAsStringCompletedEventHandler(object sender, getCategoriesAsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCategoriesAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCategoriesAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void abortCasesAsStringCompletedEventHandler(object sender, abortCasesAsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class abortCasesAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal abortCasesAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getAssignationLogAsStringCompletedEventHandler(object sender, getAssignationLogAsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAssignationLogAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAssignationLogAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CheckPasswordCompletedEventHandler(object sender, CheckPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void assignActivityAsStringCompletedEventHandler(object sender, assignActivityAsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assignActivityAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assignActivityAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void grantCaseAccessCompletedEventHandler(object sender, grantCaseAccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class grantCaseAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal grantCaseAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void revokeCaseAccessCompletedEventHandler(object sender, revokeCaseAccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class revokeCaseAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal revokeCaseAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void cleanTestDataCompletedEventHandler(object sender, cleanTestDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cleanTestDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cleanTestDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void createCasesCompletedEventHandler(object sender, createCasesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createCasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createCasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void evalRuleCompletedEventHandler(object sender, evalRuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class evalRuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal evalRuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getActivitiesCompletedEventHandler(object sender, getActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getAssignationLogCompletedEventHandler(object sender, getAssignationLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAssignationLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAssignationLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getClosedActivitiesCompletedEventHandler(object sender, getClosedActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getClosedActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getClosedActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void performActivityCompletedEventHandler(object sender, performActivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class performActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal performActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void resumeCasesCompletedEventHandler(object sender, resumeCasesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class resumeCasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal resumeCasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void rollbackCaseCompletedEventHandler(object sender, rollbackCaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rollbackCaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rollbackCaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void setEventCompletedEventHandler(object sender, setEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void suspendCasesCompletedEventHandler(object sender, suspendCasesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class suspendCasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal suspendCasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void abortCasesCompletedEventHandler(object sender, abortCasesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class abortCasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal abortCasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getApplicationsCompletedEventHandler(object sender, getApplicationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getApplicationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getApplicationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getCategoriesCompletedEventHandler(object sender, getCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getCategories2CompletedEventHandler(object sender, getCategories2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCategories2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCategories2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getCategoriesFromApplicationNameCompletedEventHandler(object sender, getCategoriesFromApplicationNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCategoriesFromApplicationNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCategoriesFromApplicationNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getWorkflowClassesFromCategoryNameCompletedEventHandler(object sender, getWorkflowClassesFromCategoryNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWorkflowClassesFromCategoryNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWorkflowClassesFromCategoryNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getCategoriesLocalizedCompletedEventHandler(object sender, getCategoriesLocalizedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCategoriesLocalizedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCategoriesLocalizedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getWorkflowClassesCompletedEventHandler(object sender, getWorkflowClassesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWorkflowClassesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWorkflowClassesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getWorkflowClasses2CompletedEventHandler(object sender, getWorkflowClasses2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWorkflowClasses2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWorkflowClasses2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getEventsCompletedEventHandler(object sender, getEventsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getCasesCompletedEventHandler(object sender, getCasesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void saveActivityCompletedEventHandler(object sender, saveActivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void assignActivityCompletedEventHandler(object sender, assignActivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class assignActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal assignActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591