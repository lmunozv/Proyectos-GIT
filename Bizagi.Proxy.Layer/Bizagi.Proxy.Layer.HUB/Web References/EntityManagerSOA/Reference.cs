//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Bizagi.Proxy.Layer.HUB.EntityManagerSOA {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EntityManagerSOASoap", Namespace="http://tempuri.org/")]
    public partial class EntityManagerSOA : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getEntitiesAsStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEntitiesUsingSchemaAsStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveEntityAsStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEntitySchemaStrOperationCompleted;
        
        private System.Threading.SendOrPostCallback cleanTestDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCaseLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEntityFormLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEntityLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEntitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCaseDataUsingSchemaLiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCaseDataUsingSchemaLiteAsStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCaseDataUsingSchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCaseDataUsingSchemaAsStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCaseDataUsingXPathsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCaseDataUsingXPathsAsStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEntitiesUsingSchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEntitySchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback replicateEntityOperationCompleted;
        
        private System.Threading.SendOrPostCallback replicateAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveEntityOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveEntityWithKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveEntityWithKeyAsStringOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EntityManagerSOA() {
            this.Url = global::Bizagi.Proxy.Layer.HUB.Properties.Settings.Default.Bizagi_Proxy_Layer_HUB_EntityManagerSOA_EntityManagerSOA;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getEntitiesAsStringCompletedEventHandler getEntitiesAsStringCompleted;
        
        /// <remarks/>
        public event getEntitiesUsingSchemaAsStringCompletedEventHandler getEntitiesUsingSchemaAsStringCompleted;
        
        /// <remarks/>
        public event saveEntityAsStringCompletedEventHandler saveEntityAsStringCompleted;
        
        /// <remarks/>
        public event getEntitySchemaStrCompletedEventHandler getEntitySchemaStrCompleted;
        
        /// <remarks/>
        public event cleanTestDataCompletedEventHandler cleanTestDataCompleted;
        
        /// <remarks/>
        public event getCaseLogCompletedEventHandler getCaseLogCompleted;
        
        /// <remarks/>
        public event getEntityFormLogCompletedEventHandler getEntityFormLogCompleted;
        
        /// <remarks/>
        public event getEntityLogCompletedEventHandler getEntityLogCompleted;
        
        /// <remarks/>
        public event getEntitiesCompletedEventHandler getEntitiesCompleted;
        
        /// <remarks/>
        public event getCaseDataUsingSchemaLiteCompletedEventHandler getCaseDataUsingSchemaLiteCompleted;
        
        /// <remarks/>
        public event getCaseDataUsingSchemaLiteAsStringCompletedEventHandler getCaseDataUsingSchemaLiteAsStringCompleted;
        
        /// <remarks/>
        public event getCaseDataUsingSchemaCompletedEventHandler getCaseDataUsingSchemaCompleted;
        
        /// <remarks/>
        public event getCaseDataUsingSchemaAsStringCompletedEventHandler getCaseDataUsingSchemaAsStringCompleted;
        
        /// <remarks/>
        public event getCaseDataUsingXPathsCompletedEventHandler getCaseDataUsingXPathsCompleted;
        
        /// <remarks/>
        public event getCaseDataUsingXPathsAsStringCompletedEventHandler getCaseDataUsingXPathsAsStringCompleted;
        
        /// <remarks/>
        public event getEntitiesUsingSchemaCompletedEventHandler getEntitiesUsingSchemaCompleted;
        
        /// <remarks/>
        public event getEntitySchemaCompletedEventHandler getEntitySchemaCompleted;
        
        /// <remarks/>
        public event replicateEntityCompletedEventHandler replicateEntityCompleted;
        
        /// <remarks/>
        public event replicateAllCompletedEventHandler replicateAllCompleted;
        
        /// <remarks/>
        public event saveEntityCompletedEventHandler saveEntityCompleted;
        
        /// <remarks/>
        public event saveEntityWithKeyCompletedEventHandler saveEntityWithKeyCompleted;
        
        /// <remarks/>
        public event saveEntityWithKeyAsStringCompletedEventHandler saveEntityWithKeyAsStringCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getEntitiesAsString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getEntitiesAsString(string entitiesInfo) {
            object[] results = this.Invoke("getEntitiesAsString", new object[] {
                        entitiesInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getEntitiesAsStringAsync(string entitiesInfo) {
            this.getEntitiesAsStringAsync(entitiesInfo, null);
        }
        
        /// <remarks/>
        public void getEntitiesAsStringAsync(string entitiesInfo, object userState) {
            if ((this.getEntitiesAsStringOperationCompleted == null)) {
                this.getEntitiesAsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEntitiesAsStringOperationCompleted);
            }
            this.InvokeAsync("getEntitiesAsString", new object[] {
                        entitiesInfo}, this.getEntitiesAsStringOperationCompleted, userState);
        }
        
        private void OngetEntitiesAsStringOperationCompleted(object arg) {
            if ((this.getEntitiesAsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEntitiesAsStringCompleted(this, new getEntitiesAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getEntitiesUsingSchemaAsString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getEntitiesUsingSchemaAsString(string entitiesInfo, string schema) {
            object[] results = this.Invoke("getEntitiesUsingSchemaAsString", new object[] {
                        entitiesInfo,
                        schema});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getEntitiesUsingSchemaAsStringAsync(string entitiesInfo, string schema) {
            this.getEntitiesUsingSchemaAsStringAsync(entitiesInfo, schema, null);
        }
        
        /// <remarks/>
        public void getEntitiesUsingSchemaAsStringAsync(string entitiesInfo, string schema, object userState) {
            if ((this.getEntitiesUsingSchemaAsStringOperationCompleted == null)) {
                this.getEntitiesUsingSchemaAsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEntitiesUsingSchemaAsStringOperationCompleted);
            }
            this.InvokeAsync("getEntitiesUsingSchemaAsString", new object[] {
                        entitiesInfo,
                        schema}, this.getEntitiesUsingSchemaAsStringOperationCompleted, userState);
        }
        
        private void OngetEntitiesUsingSchemaAsStringOperationCompleted(object arg) {
            if ((this.getEntitiesUsingSchemaAsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEntitiesUsingSchemaAsStringCompleted(this, new getEntitiesUsingSchemaAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveEntityAsString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string saveEntityAsString(string entityInfo) {
            object[] results = this.Invoke("saveEntityAsString", new object[] {
                        entityInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void saveEntityAsStringAsync(string entityInfo) {
            this.saveEntityAsStringAsync(entityInfo, null);
        }
        
        /// <remarks/>
        public void saveEntityAsStringAsync(string entityInfo, object userState) {
            if ((this.saveEntityAsStringOperationCompleted == null)) {
                this.saveEntityAsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveEntityAsStringOperationCompleted);
            }
            this.InvokeAsync("saveEntityAsString", new object[] {
                        entityInfo}, this.saveEntityAsStringOperationCompleted, userState);
        }
        
        private void OnsaveEntityAsStringOperationCompleted(object arg) {
            if ((this.saveEntityAsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveEntityAsStringCompleted(this, new saveEntityAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getEntitySchemaStr", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getEntitySchemaStr(string entityName) {
            object[] results = this.Invoke("getEntitySchemaStr", new object[] {
                        entityName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getEntitySchemaStrAsync(string entityName) {
            this.getEntitySchemaStrAsync(entityName, null);
        }
        
        /// <remarks/>
        public void getEntitySchemaStrAsync(string entityName, object userState) {
            if ((this.getEntitySchemaStrOperationCompleted == null)) {
                this.getEntitySchemaStrOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEntitySchemaStrOperationCompleted);
            }
            this.InvokeAsync("getEntitySchemaStr", new object[] {
                        entityName}, this.getEntitySchemaStrOperationCompleted, userState);
        }
        
        private void OngetEntitySchemaStrOperationCompleted(object arg) {
            if ((this.getEntitySchemaStrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEntitySchemaStrCompleted(this, new getEntitySchemaStrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/cleanTestData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode cleanTestData(System.Xml.XmlNode testCaseInfo) {
            object[] results = this.Invoke("cleanTestData", new object[] {
                        testCaseInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void cleanTestDataAsync(System.Xml.XmlNode testCaseInfo) {
            this.cleanTestDataAsync(testCaseInfo, null);
        }
        
        /// <remarks/>
        public void cleanTestDataAsync(System.Xml.XmlNode testCaseInfo, object userState) {
            if ((this.cleanTestDataOperationCompleted == null)) {
                this.cleanTestDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OncleanTestDataOperationCompleted);
            }
            this.InvokeAsync("cleanTestData", new object[] {
                        testCaseInfo}, this.cleanTestDataOperationCompleted, userState);
        }
        
        private void OncleanTestDataOperationCompleted(object arg) {
            if ((this.cleanTestDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cleanTestDataCompleted(this, new cleanTestDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCaseLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode getCaseLog(System.Xml.XmlNode caseInfo) {
            object[] results = this.Invoke("getCaseLog", new object[] {
                        caseInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void getCaseLogAsync(System.Xml.XmlNode caseInfo) {
            this.getCaseLogAsync(caseInfo, null);
        }
        
        /// <remarks/>
        public void getCaseLogAsync(System.Xml.XmlNode caseInfo, object userState) {
            if ((this.getCaseLogOperationCompleted == null)) {
                this.getCaseLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCaseLogOperationCompleted);
            }
            this.InvokeAsync("getCaseLog", new object[] {
                        caseInfo}, this.getCaseLogOperationCompleted, userState);
        }
        
        private void OngetCaseLogOperationCompleted(object arg) {
            if ((this.getCaseLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCaseLogCompleted(this, new getCaseLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getEntityFormLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode getEntityFormLog(System.Xml.XmlNode caseInfo) {
            object[] results = this.Invoke("getEntityFormLog", new object[] {
                        caseInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void getEntityFormLogAsync(System.Xml.XmlNode caseInfo) {
            this.getEntityFormLogAsync(caseInfo, null);
        }
        
        /// <remarks/>
        public void getEntityFormLogAsync(System.Xml.XmlNode caseInfo, object userState) {
            if ((this.getEntityFormLogOperationCompleted == null)) {
                this.getEntityFormLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEntityFormLogOperationCompleted);
            }
            this.InvokeAsync("getEntityFormLog", new object[] {
                        caseInfo}, this.getEntityFormLogOperationCompleted, userState);
        }
        
        private void OngetEntityFormLogOperationCompleted(object arg) {
            if ((this.getEntityFormLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEntityFormLogCompleted(this, new getEntityFormLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getEntityLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode getEntityLog(System.Xml.XmlNode caseInfo) {
            object[] results = this.Invoke("getEntityLog", new object[] {
                        caseInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void getEntityLogAsync(System.Xml.XmlNode caseInfo) {
            this.getEntityLogAsync(caseInfo, null);
        }
        
        /// <remarks/>
        public void getEntityLogAsync(System.Xml.XmlNode caseInfo, object userState) {
            if ((this.getEntityLogOperationCompleted == null)) {
                this.getEntityLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEntityLogOperationCompleted);
            }
            this.InvokeAsync("getEntityLog", new object[] {
                        caseInfo}, this.getEntityLogOperationCompleted, userState);
        }
        
        private void OngetEntityLogOperationCompleted(object arg) {
            if ((this.getEntityLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEntityLogCompleted(this, new getEntityLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getEntities", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode getEntities(System.Xml.XmlNode entitiesInfo) {
            object[] results = this.Invoke("getEntities", new object[] {
                        entitiesInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void getEntitiesAsync(System.Xml.XmlNode entitiesInfo) {
            this.getEntitiesAsync(entitiesInfo, null);
        }
        
        /// <remarks/>
        public void getEntitiesAsync(System.Xml.XmlNode entitiesInfo, object userState) {
            if ((this.getEntitiesOperationCompleted == null)) {
                this.getEntitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEntitiesOperationCompleted);
            }
            this.InvokeAsync("getEntities", new object[] {
                        entitiesInfo}, this.getEntitiesOperationCompleted, userState);
        }
        
        private void OngetEntitiesOperationCompleted(object arg) {
            if ((this.getEntitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEntitiesCompleted(this, new getEntitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCaseDataUsingSchemaLite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode getCaseDataUsingSchemaLite(int idCase, System.Xml.XmlNode xsd) {
            object[] results = this.Invoke("getCaseDataUsingSchemaLite", new object[] {
                        idCase,
                        xsd});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void getCaseDataUsingSchemaLiteAsync(int idCase, System.Xml.XmlNode xsd) {
            this.getCaseDataUsingSchemaLiteAsync(idCase, xsd, null);
        }
        
        /// <remarks/>
        public void getCaseDataUsingSchemaLiteAsync(int idCase, System.Xml.XmlNode xsd, object userState) {
            if ((this.getCaseDataUsingSchemaLiteOperationCompleted == null)) {
                this.getCaseDataUsingSchemaLiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCaseDataUsingSchemaLiteOperationCompleted);
            }
            this.InvokeAsync("getCaseDataUsingSchemaLite", new object[] {
                        idCase,
                        xsd}, this.getCaseDataUsingSchemaLiteOperationCompleted, userState);
        }
        
        private void OngetCaseDataUsingSchemaLiteOperationCompleted(object arg) {
            if ((this.getCaseDataUsingSchemaLiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCaseDataUsingSchemaLiteCompleted(this, new getCaseDataUsingSchemaLiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCaseDataUsingSchemaLiteAsString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getCaseDataUsingSchemaLiteAsString(int idCase, string sxsd) {
            object[] results = this.Invoke("getCaseDataUsingSchemaLiteAsString", new object[] {
                        idCase,
                        sxsd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCaseDataUsingSchemaLiteAsStringAsync(int idCase, string sxsd) {
            this.getCaseDataUsingSchemaLiteAsStringAsync(idCase, sxsd, null);
        }
        
        /// <remarks/>
        public void getCaseDataUsingSchemaLiteAsStringAsync(int idCase, string sxsd, object userState) {
            if ((this.getCaseDataUsingSchemaLiteAsStringOperationCompleted == null)) {
                this.getCaseDataUsingSchemaLiteAsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCaseDataUsingSchemaLiteAsStringOperationCompleted);
            }
            this.InvokeAsync("getCaseDataUsingSchemaLiteAsString", new object[] {
                        idCase,
                        sxsd}, this.getCaseDataUsingSchemaLiteAsStringOperationCompleted, userState);
        }
        
        private void OngetCaseDataUsingSchemaLiteAsStringOperationCompleted(object arg) {
            if ((this.getCaseDataUsingSchemaLiteAsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCaseDataUsingSchemaLiteAsStringCompleted(this, new getCaseDataUsingSchemaLiteAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCaseDataUsingSchema", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode getCaseDataUsingSchema(string idCase, string idWorkItem, System.Xml.XmlNode xsd) {
            object[] results = this.Invoke("getCaseDataUsingSchema", new object[] {
                        idCase,
                        idWorkItem,
                        xsd});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void getCaseDataUsingSchemaAsync(string idCase, string idWorkItem, System.Xml.XmlNode xsd) {
            this.getCaseDataUsingSchemaAsync(idCase, idWorkItem, xsd, null);
        }
        
        /// <remarks/>
        public void getCaseDataUsingSchemaAsync(string idCase, string idWorkItem, System.Xml.XmlNode xsd, object userState) {
            if ((this.getCaseDataUsingSchemaOperationCompleted == null)) {
                this.getCaseDataUsingSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCaseDataUsingSchemaOperationCompleted);
            }
            this.InvokeAsync("getCaseDataUsingSchema", new object[] {
                        idCase,
                        idWorkItem,
                        xsd}, this.getCaseDataUsingSchemaOperationCompleted, userState);
        }
        
        private void OngetCaseDataUsingSchemaOperationCompleted(object arg) {
            if ((this.getCaseDataUsingSchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCaseDataUsingSchemaCompleted(this, new getCaseDataUsingSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCaseDataUsingSchemaAsString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getCaseDataUsingSchemaAsString(string idCase, string idWorkItem, string sxsd) {
            object[] results = this.Invoke("getCaseDataUsingSchemaAsString", new object[] {
                        idCase,
                        idWorkItem,
                        sxsd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCaseDataUsingSchemaAsStringAsync(string idCase, string idWorkItem, string sxsd) {
            this.getCaseDataUsingSchemaAsStringAsync(idCase, idWorkItem, sxsd, null);
        }
        
        /// <remarks/>
        public void getCaseDataUsingSchemaAsStringAsync(string idCase, string idWorkItem, string sxsd, object userState) {
            if ((this.getCaseDataUsingSchemaAsStringOperationCompleted == null)) {
                this.getCaseDataUsingSchemaAsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCaseDataUsingSchemaAsStringOperationCompleted);
            }
            this.InvokeAsync("getCaseDataUsingSchemaAsString", new object[] {
                        idCase,
                        idWorkItem,
                        sxsd}, this.getCaseDataUsingSchemaAsStringOperationCompleted, userState);
        }
        
        private void OngetCaseDataUsingSchemaAsStringOperationCompleted(object arg) {
            if ((this.getCaseDataUsingSchemaAsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCaseDataUsingSchemaAsStringCompleted(this, new getCaseDataUsingSchemaAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCaseDataUsingXPaths", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode getCaseDataUsingXPaths(System.Xml.XmlNode xml) {
            object[] results = this.Invoke("getCaseDataUsingXPaths", new object[] {
                        xml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void getCaseDataUsingXPathsAsync(System.Xml.XmlNode xml) {
            this.getCaseDataUsingXPathsAsync(xml, null);
        }
        
        /// <remarks/>
        public void getCaseDataUsingXPathsAsync(System.Xml.XmlNode xml, object userState) {
            if ((this.getCaseDataUsingXPathsOperationCompleted == null)) {
                this.getCaseDataUsingXPathsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCaseDataUsingXPathsOperationCompleted);
            }
            this.InvokeAsync("getCaseDataUsingXPaths", new object[] {
                        xml}, this.getCaseDataUsingXPathsOperationCompleted, userState);
        }
        
        private void OngetCaseDataUsingXPathsOperationCompleted(object arg) {
            if ((this.getCaseDataUsingXPathsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCaseDataUsingXPathsCompleted(this, new getCaseDataUsingXPathsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCaseDataUsingXPathsAsString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getCaseDataUsingXPathsAsString(string sXml) {
            object[] results = this.Invoke("getCaseDataUsingXPathsAsString", new object[] {
                        sXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCaseDataUsingXPathsAsStringAsync(string sXml) {
            this.getCaseDataUsingXPathsAsStringAsync(sXml, null);
        }
        
        /// <remarks/>
        public void getCaseDataUsingXPathsAsStringAsync(string sXml, object userState) {
            if ((this.getCaseDataUsingXPathsAsStringOperationCompleted == null)) {
                this.getCaseDataUsingXPathsAsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCaseDataUsingXPathsAsStringOperationCompleted);
            }
            this.InvokeAsync("getCaseDataUsingXPathsAsString", new object[] {
                        sXml}, this.getCaseDataUsingXPathsAsStringOperationCompleted, userState);
        }
        
        private void OngetCaseDataUsingXPathsAsStringOperationCompleted(object arg) {
            if ((this.getCaseDataUsingXPathsAsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCaseDataUsingXPathsAsStringCompleted(this, new getCaseDataUsingXPathsAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getEntitiesUsingSchema", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode getEntitiesUsingSchema(System.Xml.XmlNode entitiesInfo, System.Xml.XmlNode schema) {
            object[] results = this.Invoke("getEntitiesUsingSchema", new object[] {
                        entitiesInfo,
                        schema});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void getEntitiesUsingSchemaAsync(System.Xml.XmlNode entitiesInfo, System.Xml.XmlNode schema) {
            this.getEntitiesUsingSchemaAsync(entitiesInfo, schema, null);
        }
        
        /// <remarks/>
        public void getEntitiesUsingSchemaAsync(System.Xml.XmlNode entitiesInfo, System.Xml.XmlNode schema, object userState) {
            if ((this.getEntitiesUsingSchemaOperationCompleted == null)) {
                this.getEntitiesUsingSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEntitiesUsingSchemaOperationCompleted);
            }
            this.InvokeAsync("getEntitiesUsingSchema", new object[] {
                        entitiesInfo,
                        schema}, this.getEntitiesUsingSchemaOperationCompleted, userState);
        }
        
        private void OngetEntitiesUsingSchemaOperationCompleted(object arg) {
            if ((this.getEntitiesUsingSchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEntitiesUsingSchemaCompleted(this, new getEntitiesUsingSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getEntitySchema", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode getEntitySchema(string entityName) {
            object[] results = this.Invoke("getEntitySchema", new object[] {
                        entityName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void getEntitySchemaAsync(string entityName) {
            this.getEntitySchemaAsync(entityName, null);
        }
        
        /// <remarks/>
        public void getEntitySchemaAsync(string entityName, object userState) {
            if ((this.getEntitySchemaOperationCompleted == null)) {
                this.getEntitySchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEntitySchemaOperationCompleted);
            }
            this.InvokeAsync("getEntitySchema", new object[] {
                        entityName}, this.getEntitySchemaOperationCompleted, userState);
        }
        
        private void OngetEntitySchemaOperationCompleted(object arg) {
            if ((this.getEntitySchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEntitySchemaCompleted(this, new getEntitySchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/replicateEntity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode replicateEntity(string entityName) {
            object[] results = this.Invoke("replicateEntity", new object[] {
                        entityName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void replicateEntityAsync(string entityName) {
            this.replicateEntityAsync(entityName, null);
        }
        
        /// <remarks/>
        public void replicateEntityAsync(string entityName, object userState) {
            if ((this.replicateEntityOperationCompleted == null)) {
                this.replicateEntityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreplicateEntityOperationCompleted);
            }
            this.InvokeAsync("replicateEntity", new object[] {
                        entityName}, this.replicateEntityOperationCompleted, userState);
        }
        
        private void OnreplicateEntityOperationCompleted(object arg) {
            if ((this.replicateEntityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.replicateEntityCompleted(this, new replicateEntityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/replicateAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode replicateAll() {
            object[] results = this.Invoke("replicateAll", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void replicateAllAsync() {
            this.replicateAllAsync(null);
        }
        
        /// <remarks/>
        public void replicateAllAsync(object userState) {
            if ((this.replicateAllOperationCompleted == null)) {
                this.replicateAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreplicateAllOperationCompleted);
            }
            this.InvokeAsync("replicateAll", new object[0], this.replicateAllOperationCompleted, userState);
        }
        
        private void OnreplicateAllOperationCompleted(object arg) {
            if ((this.replicateAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.replicateAllCompleted(this, new replicateAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveEntity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode saveEntity(System.Xml.XmlNode entityInfo) {
            object[] results = this.Invoke("saveEntity", new object[] {
                        entityInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void saveEntityAsync(System.Xml.XmlNode entityInfo) {
            this.saveEntityAsync(entityInfo, null);
        }
        
        /// <remarks/>
        public void saveEntityAsync(System.Xml.XmlNode entityInfo, object userState) {
            if ((this.saveEntityOperationCompleted == null)) {
                this.saveEntityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveEntityOperationCompleted);
            }
            this.InvokeAsync("saveEntity", new object[] {
                        entityInfo}, this.saveEntityOperationCompleted, userState);
        }
        
        private void OnsaveEntityOperationCompleted(object arg) {
            if ((this.saveEntityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveEntityCompleted(this, new saveEntityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveEntityWithKey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode saveEntityWithKey(object oEntityKey, System.Xml.XmlNode entityInfo) {
            object[] results = this.Invoke("saveEntityWithKey", new object[] {
                        oEntityKey,
                        entityInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void saveEntityWithKeyAsync(object oEntityKey, System.Xml.XmlNode entityInfo) {
            this.saveEntityWithKeyAsync(oEntityKey, entityInfo, null);
        }
        
        /// <remarks/>
        public void saveEntityWithKeyAsync(object oEntityKey, System.Xml.XmlNode entityInfo, object userState) {
            if ((this.saveEntityWithKeyOperationCompleted == null)) {
                this.saveEntityWithKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveEntityWithKeyOperationCompleted);
            }
            this.InvokeAsync("saveEntityWithKey", new object[] {
                        oEntityKey,
                        entityInfo}, this.saveEntityWithKeyOperationCompleted, userState);
        }
        
        private void OnsaveEntityWithKeyOperationCompleted(object arg) {
            if ((this.saveEntityWithKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveEntityWithKeyCompleted(this, new saveEntityWithKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/saveEntityWithKeyAsString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string saveEntityWithKeyAsString(object oEntityKey, string entityInfo) {
            object[] results = this.Invoke("saveEntityWithKeyAsString", new object[] {
                        oEntityKey,
                        entityInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void saveEntityWithKeyAsStringAsync(object oEntityKey, string entityInfo) {
            this.saveEntityWithKeyAsStringAsync(oEntityKey, entityInfo, null);
        }
        
        /// <remarks/>
        public void saveEntityWithKeyAsStringAsync(object oEntityKey, string entityInfo, object userState) {
            if ((this.saveEntityWithKeyAsStringOperationCompleted == null)) {
                this.saveEntityWithKeyAsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveEntityWithKeyAsStringOperationCompleted);
            }
            this.InvokeAsync("saveEntityWithKeyAsString", new object[] {
                        oEntityKey,
                        entityInfo}, this.saveEntityWithKeyAsStringOperationCompleted, userState);
        }
        
        private void OnsaveEntityWithKeyAsStringOperationCompleted(object arg) {
            if ((this.saveEntityWithKeyAsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveEntityWithKeyAsStringCompleted(this, new saveEntityWithKeyAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getEntitiesAsStringCompletedEventHandler(object sender, getEntitiesAsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEntitiesAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEntitiesAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getEntitiesUsingSchemaAsStringCompletedEventHandler(object sender, getEntitiesUsingSchemaAsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEntitiesUsingSchemaAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEntitiesUsingSchemaAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void saveEntityAsStringCompletedEventHandler(object sender, saveEntityAsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveEntityAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveEntityAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getEntitySchemaStrCompletedEventHandler(object sender, getEntitySchemaStrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEntitySchemaStrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEntitySchemaStrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void cleanTestDataCompletedEventHandler(object sender, cleanTestDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cleanTestDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cleanTestDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getCaseLogCompletedEventHandler(object sender, getCaseLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCaseLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCaseLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getEntityFormLogCompletedEventHandler(object sender, getEntityFormLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEntityFormLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEntityFormLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getEntityLogCompletedEventHandler(object sender, getEntityLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEntityLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEntityLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getEntitiesCompletedEventHandler(object sender, getEntitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEntitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEntitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getCaseDataUsingSchemaLiteCompletedEventHandler(object sender, getCaseDataUsingSchemaLiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCaseDataUsingSchemaLiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCaseDataUsingSchemaLiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getCaseDataUsingSchemaLiteAsStringCompletedEventHandler(object sender, getCaseDataUsingSchemaLiteAsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCaseDataUsingSchemaLiteAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCaseDataUsingSchemaLiteAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getCaseDataUsingSchemaCompletedEventHandler(object sender, getCaseDataUsingSchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCaseDataUsingSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCaseDataUsingSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getCaseDataUsingSchemaAsStringCompletedEventHandler(object sender, getCaseDataUsingSchemaAsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCaseDataUsingSchemaAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCaseDataUsingSchemaAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getCaseDataUsingXPathsCompletedEventHandler(object sender, getCaseDataUsingXPathsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCaseDataUsingXPathsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCaseDataUsingXPathsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getCaseDataUsingXPathsAsStringCompletedEventHandler(object sender, getCaseDataUsingXPathsAsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCaseDataUsingXPathsAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCaseDataUsingXPathsAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getEntitiesUsingSchemaCompletedEventHandler(object sender, getEntitiesUsingSchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEntitiesUsingSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEntitiesUsingSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void getEntitySchemaCompletedEventHandler(object sender, getEntitySchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEntitySchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEntitySchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void replicateEntityCompletedEventHandler(object sender, replicateEntityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class replicateEntityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal replicateEntityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void replicateAllCompletedEventHandler(object sender, replicateAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class replicateAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal replicateAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void saveEntityCompletedEventHandler(object sender, saveEntityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveEntityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveEntityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void saveEntityWithKeyCompletedEventHandler(object sender, saveEntityWithKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveEntityWithKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveEntityWithKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void saveEntityWithKeyAsStringCompletedEventHandler(object sender, saveEntityWithKeyAsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveEntityWithKeyAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveEntityWithKeyAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591